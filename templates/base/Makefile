# ${APP_NAME} Development Automation
# Generated by AppMaker

.PHONY: help setup dev test build clean lint format ci ci-quiet

# Default target
help: ## Display this help message
	@echo "${APP_NAME} Build Automation"
	@echo "========================="
	@grep -E '^[a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | sort | awk 'BEGIN {FS = ":.*?## "}; {printf "\033[36m%-20s\033[0m %s\n", $$1, $$2}'

# Setup and Installation
setup: ## Complete development environment setup
	@echo "📦 Setting up development environment..."
	@command -v brew >/dev/null 2>&1 || /bin/bash -c "$$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
	@brew install xcodegen swiftlint swift-format || true
	@make generate
	@echo "✅ Setup complete!"

# Development workflow
dev: generate lint format ## Start development (generate + lint + format + open)
	@echo "🚀 Opening Xcode..."
	@open ${APP_NAME}.xcodeproj

# Project Generation
generate: ## Generate Xcode project from project.yml
	@echo "🔄 Generating Xcode project..."
	@xcodegen generate
	@echo "✅ Project generated successfully"

# Building
build: generate ## Build the project
	@echo "🔨 Building ${APP_NAME}..."
	@xcodebuild -project ${APP_NAME}.xcodeproj -scheme ${APP_NAME} -destination 'platform=iOS Simulator,name=iPhone 16' build

# Testing
test: generate ## Run all tests
	@echo "🧪 Running tests..."
	@xcodebuild test -project ${APP_NAME}.xcodeproj -scheme ${APP_NAME} -destination 'platform=iOS Simulator,name=iPhone 16'

# Code Quality
lint: ## Run SwiftLint with auto-fix
	@echo "🔍 Running SwiftLint..."
	@if command -v swiftlint >/dev/null 2>&1; then \
		swiftlint lint --fix --quiet; \
	else \
		echo "SwiftLint not installed. Run: brew install swiftlint"; \
	fi

format: ## Format code with SwiftFormat
	@echo "✨ Formatting code..."
	@if command -v swift-format >/dev/null 2>&1; then \
		find . -name "*.swift" -not -path "./.build/*" -not -path "./DerivedData/*" | xargs swift-format -i; \
	else \
		echo "swift-format not installed. Run: brew install swift-format"; \
	fi

# Cleaning
clean: ## Clean build artifacts
	@echo "🧹 Cleaning..."
	@rm -rf .build DerivedData
	@rm -rf ~/Library/Developer/Xcode/DerivedData/${APP_NAME}-*

# CI Pipeline
ci: clean generate lint format test ## Run full CI pipeline
	@echo "✅ CI pipeline completed!"

ci-quiet: ## Run CI pipeline with minimal output
	@printf "Cleaning... " && make clean > /dev/null 2>&1 && echo "✓"
	@printf "Generating... " && make generate > /dev/null 2>&1 && echo "✓"
	@printf "Linting... " && make lint > /dev/null 2>&1 && echo "✓"
	@printf "Formatting... " && make format > /dev/null 2>&1 && echo "✓"
	@printf "Testing... " && make test > /dev/null 2>&1 && echo "✓"
	@echo "CI pipeline completed!"